
'''
    线程：计算机中可以被cpu调度的最小单元
    进程：计算机资源分配的最小单元（进程为线程提供资源）
    一个进程可以拥有多个线程，同一个进程中的线程可以共享次进程中的资源

    由于cpython中GIL的存在：
        线程：适用于IO密集型操作
        进程：适用于计算密集型操作

    协程可以成为微线程，简而言之通过一个线程实现代码块相互切换执行
    协程意义：不要让用户手动去切换，而是遇到IO操作时能自动切换
    python在3.4之后推出了asyncio模块,python3.5 async，内部基于协程并且遇到IO请求自动化切换

    在处理IO操作时，协程比线程更加节省开销（协程开发的难度大一些）
'''

